language: php

dist: trusty

sudo: required

services:
  - postgresql

env:
  global:
    - APP_FULL_BASE_URL=http://127.0.0.1
    - DEBUG=1
    - DATASOURCES_TEST_USERNAME=root
    - DATASOURCES_TEST_PASSWORD=""
    - DATASOURCES_TEST_DATABASE=passbolt_test
    - PASSBOLT_GPG_KEYRING=/home/travis/.gnupg
    - PASSBOLT_GPG_SERVER_KEY_FINGERPRINT=2FC8945833C51946E937F9FED47B0811573EE67E
    - PASSBOLT_GPG_SERVER_KEY_PUBLIC=config/gpg/unsecure.key
    - PASSBOLT_GPG_SERVER_KEY_PRIVATE=config/gpg/unsecure_private.key
    - PASSBOLT_REGISTRATION_PUBLIC=1
    - PASSBOLT_SELENIUM_ACTIVE=1

addons:
  apt:
    packages: &common_pkg
      - libgpgme11-dev
      - gnupg2

matrix:
  fast_finish: true

  include:
    # PHP 7.0 - POSTGRESQL 9.2
    - php: 7.0
      env: PHPUNIT=1 DB=postgresql DB_VERSION=9.2 DATASOURCES_TEST_DRIVER=Postgres DATASOURCES_TEST_USERNAME=postgres DATASOURCES_TEST_PORT=5432 DATASOURCES_TEST_ENCODING=utf8 DATASOURCES_TEST_COLLATION=C.UTF-8
      addons:
        postgresql: "9.2"
        apt:
          packages:
            - *common_pkg

    # PHP 7.0 - POSTGRESQL 9.4
    - php: 7.0
      env: PHPUNIT=1 DB=postgresql DB_VERSION=9.4 DATASOURCES_TEST_DRIVER=Postgres DATASOURCES_TEST_USERNAME=postgres DATASOURCES_TEST_PORT=5432 DATASOURCES_TEST_ENCODING=utf8 DATASOURCES_TEST_COLLATION=C.UTF-8
      addons:
        postgresql: "9.4"
        apt:
          packages:
            - *common_pkg
before_script:
  - sh -c "if [ '$DB' = 'mysql' ]; then mysql -e 'CREATE DATABASE IF NOT EXISTS passbolt_test;'; fi"
  - sh -c "if [ '$DB' = 'mariadb' ]; then mysql -e 'CREATE DATABASE IF NOT EXISTS passbolt_test;'; fi"
  - sh -c "if [ '$DB' = 'postgresql' ]; then psql -c 'DROP DATABASE IF EXISTS passbolt_test;' -U postgres; fi"
  - sh -c "if [ '$DB' = 'postgresql' ]; then psql -c 'CREATE DATABASE passbolt_test;' -U postgres; fi"
  - composer global require hirak/prestissimo
  - composer install --no-interaction
  - echo yes | pecl install gnupg
  - gpg --import config/gpg/unsecure_private.key

script:
  - if [[ $PHPCS = 1 ]]; then composer cs-check; fi
  - if [[ $PHPUNIT = 1 && $COVERAGE != 1 ]]; then vendor/bin/phpunit; fi
  - if [[ $PHPUNIT = 1 && $COVERAGE = 1 ]] ; then vendor/bin/phpunit --coverage-clover build/logs/clover.xml; fi

after_success:
  - if [[ $COVERAGE = 1 ]] ; then php vendor/bin/coveralls -v ; fi

notifications:
  email: false
